
import os
from os import system, environ

#dasgoclient -query 'file dataset=/BsToJpsiPhi_BMuonFilter_SoftQCDnonD_TuneCUEP8M1_13TeV-pythia8-evtgen/RunIISummer16MiniAODv2-PUMoriond17_80X_mcRun2_asymptotic_2016_TrancheIV_v6_ext1-v2/MINIAODSIM'
#output                = logs/job_$(Cluster)_$(Process).stdout#
os.system("tar --exclude='tar' -zcf ./tar/bctodsmumu_analysis.tar.gz -C  .")
print "...done."

submitFileTT="""
universe              = vanilla
Executable            = prodDigiReco.sh
Requirements = OpSys == "LINUX"&& (Arch != "DUMMY" )
Should_Transfer_Files = YES
WhenToTransferOutput = ON_EXIT
Transfer_Input_Files  = tar/bctodsmumu_analysis.tar.gz, BcToDsMuMuRootupler_mod.py


x509userproxy         = x509up_u56005

+maxWallTime          = 2880
RequestMemory         = 8000
RequestDisk           = 15000

"""
fileParts = [submitFileTT]

system('mkdir -p logs')
files = open("2018B_file_clone.log","r")
count = 0
for ij in files:
    count += 1
    fileParts.append("error = logs/jobBcdsmumu_{}_$(Cluster)_$(Process).stderr\n".format(count))
    fileParts.append("output = logs/jobBcdsmumu_{}_$(Cluster)_$(Process).stdout\n".format(count))
    fileParts.append("Log = logs/jobBcdsmumu_{}_$(Cluster)_$(Process).log\n".format(count))
    fileParts.append("Arguments ={} {}\n".format(count, ij.strip()))
    fileParts.append("Queue\n\n")

    fout = open("condor_sub_Jpsi_{}.txt".format(count),"w")
    fout.write(''.join(fileParts))
    fout.close()
    fileParts.pop(-1)
    fileParts.pop(-1)
    fileParts.pop(-1)
    fileParts.pop(-1)
    
    system('condor_submit condor_sub_Jpsi_%i.txt' % count)
    
files.close() 
